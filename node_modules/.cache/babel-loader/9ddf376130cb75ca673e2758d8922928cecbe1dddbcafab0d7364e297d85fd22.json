{"ast":null,"code":"var _jsxFileName = \"/Users/alekseimorozov/Desktop/\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 new/\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u043E\\u0442 \\u041F\\u0430\\u0448\\u0438 (to do)/to-do_react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Home from './componets/home';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todoItem = '';\n  if (localStorage.todo != null) {\n    todoItem = JSON.parse(localStorage.todo);\n  } else {\n    todoItem = [{\n      id: 1,\n      title: 'Написать ToDo',\n      status: true\n    }, {\n      id: 2,\n      title: 'Сходить в магазин',\n      status: true\n    }, {\n      id: 3,\n      title: 'Сдать отчет',\n      status: false\n    }];\n  }\n  const [todo, setTodo] = useState(todoItem);\n\n  // const [todo, setTodo] = useState([ // что то вроде локальной базы данных. И вся информация доступна в переменной todo. Settodo - функция, которая будет менять сам to do\n  //   {\n  //     id: 1,\n  //     title: 'Написать ToDo',\n  //     status: true,\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Сходить в магазин',\n  //     status: true,\n  //   },\n  //   {\n  //     id: 3,\n  //     title: 'Сдать отчет',\n  //     status: false,\n  //   },\n  // ])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Home, {\n      todo: todo,\n      setTodo: setTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U1vKki4GCCgGk2nagy6qwOvS8tM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Home","App","todoItem","localStorage","todo","JSON","parse","id","title","status","setTodo"],"sources":["/Users/alekseimorozov/Desktop/Разработка new/Тестовое от Паши (to do)/to-do_react/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Home from './componets/home';\nimport './App.css';\n\nfunction App() {\n\n  let todoItem = '';\n\n  if(localStorage.todo != null) {\n    todoItem = JSON.parse( localStorage.todo );\n  } else {\n    todoItem = [{\n      id: 1,\n      title: 'Написать ToDo',\n      status: true,\n    },\n    {\n      id: 2,\n      title: 'Сходить в магазин',\n      status: true,\n    },\n    {\n      id: 3,\n      title: 'Сдать отчет',\n      status: false,\n    },]\n  }\n\n  const [todo, setTodo] = useState(todoItem)\n\n  // const [todo, setTodo] = useState([ // что то вроде локальной базы данных. И вся информация доступна в переменной todo. Settodo - функция, которая будет менять сам to do\n  //   {\n  //     id: 1,\n  //     title: 'Написать ToDo',\n  //     status: true,\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Сходить в магазин',\n  //     status: true,\n  //   },\n  //   {\n  //     id: 3,\n  //     title: 'Сдать отчет',\n  //     status: false,\n  //   },\n  // ])\n\n  return (\n    <div className=\"App\">\n      <Home todo={todo} setTodo={setTodo}/></div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EAEb,IAAIC,QAAQ,GAAG,EAAE;EAEjB,IAAGC,YAAY,CAACC,IAAI,IAAI,IAAI,EAAE;IAC5BF,QAAQ,GAAGG,IAAI,CAACC,KAAK,CAAEH,YAAY,CAACC,IAAI,CAAE;EAC5C,CAAC,MAAM;IACLF,QAAQ,GAAG,CAAC;MACVK,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,eAAe;MACtBC,MAAM,EAAE;IACV,CAAC,EACD;MACEF,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,mBAAmB;MAC1BC,MAAM,EAAE;IACV,CAAC,EACD;MACEF,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,aAAa;MACpBC,MAAM,EAAE;IACV,CAAC,CAAE;EACL;EAEA,MAAM,CAACL,IAAI,EAAEM,OAAO,CAAC,GAAGX,QAAQ,CAACG,QAAQ,CAAC;;EAE1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,IAAI;MAAC,IAAI,EAAEE,IAAK;MAAC,OAAO,EAAEM;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAAM;AAEjD;AAAC,GAhDQT,GAAG;AAAA,KAAHA,GAAG;AAkDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}